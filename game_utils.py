#Aaron Matayka
# 03/13/25
#Main Utility File for holding shared functions such as generating the grid, moving players, checking meet conditions, displaying statistics, etc
from random import random


#Simple function to make a grid based on the x_size and y_size, and if not declared makes a 2x2 grid
def make_grid(x_size = 2, y_size = 2):
    grid = [[0 for _ in range(x_size)] for _ in range(y_size)]
    return grid

#Simple function used for printing any grid generated by make_grid. Uses *row to print without brackets for cleaner visualization
def print_grid(grid):
    for row in grid:
        print(*row)
    print("\n")

#Function used to place players on the grid, defaulting to 2 players and the top left and bottom right corner of the grid.
#Can also input direct positions on the grid instead to position each character
def place_players(grid, players=2, positions=None):
    x_size = len(grid[0])
    y_size = len(grid)

    #If position is not provided, default to opposite corners
    if positions is None:
        if players == 2:
            positions = [(0,0), (y_size-1, x_size-1)]
        else:
            positions = []
    #Ensures we do not place more players than there are positions open
    if len(positions) < players:
        print(f"Warning: Not enough positions for {players} players. Some players may not be placed.")

    for i, (y, x) in enumerate(positions[:players]): #Ensures we only use up to the number of players
        if 0 <= y < y_size and 0 <= x < x_size: #Ensure we are within the grid
            grid[y][x] = i+1 #Mark grid with player number, starting with 1
        else:
            print(f"Invalid position for player {i+1}: {(y,x)}")
    return grid

def move_player(grid, player=0, direction="random"):
    #Creates a dictionary to map each direction to its movement
    move_actions = {
        "up": (-1, 0),
        "down": (1, 0),
        "left": (0, -1),
        "right": (0, 1),
    }
    if direction == "random":
        direction = random.choice(["up", "down", "left", "right"])

    delta_y, delta_x = move_actions.get(direction, (0,0)) #No movement if invalid direction
    #TODO: Need to find a way to get the index of Player here in order to use it's position to add new delta y and x to. Maybe could pass player number and step through grid to find the player? Seems inefficient.



#Testing code
#TODO: move to main
test_grid = make_grid(5,3)
print_grid(test_grid)

place_players(test_grid)

print_grid(test_grid)